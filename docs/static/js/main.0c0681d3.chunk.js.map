{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","event","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","img","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"oMA+CeA,EA5CK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAyBvC,OACI,sBAAMC,SAhBW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAmBO,OAElCN,EAAc,MASlB,SAEE,uBACEO,KAAO,OACPC,MAAST,EACTU,SA3BkB,SAACC,GAEvBV,EAAcU,EAAMC,OAAOH,a,8BCTtBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,gEAIDI,MAAOF,GAJN,cAIdG,EAJc,gBAMGA,EAAKC,OANR,uBAMZC,EANY,EAMZA,KAEFC,EAAOD,EAAKE,KAAI,YAErB,MAAO,CACHC,GAH4E,EAAzDA,GAInBC,MAJ4E,EAArDA,MAKvBT,IAL4E,EAA9CU,OAAUC,iBAAoBX,QAR7C,kBAkBbM,GAlBa,4CAAH,sDCCPM,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAIjC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAOd,EAAKe,IAAON,IACxB,4BAAIA,QCHHO,EAAU,SAAC,GAAqB,IAAlBlB,EAAiB,EAAjBA,UAAiB,ECFhB,SAACA,GAAe,IAAD,EAEbf,mBAAS,CAC/BsB,KAAK,GACLY,SAAQ,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAgBvC,OATAC,qBAAU,WACNvB,EAAQC,GACHuB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CAACd,KAAMiB,EAAML,SAAQ,MAC/B,UAEZ,CAAEnB,IAEEoB,EDZiBM,CAAa1B,GAA9BO,EAFiC,EAEjCA,KAAMY,EAF2B,EAE3BA,QAEb,OACI,qCACC,oBAAIJ,UAAW,oDAAf,SAAsEf,IACrEmB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAY,YAAjB,SAIKR,EAAKE,KAAK,SAAAkB,GAAG,OAAK,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBC,IAAMD,EAAIjB,eEgBjDmB,EA7BM,WAAM,MAGa5C,mBAAS,CAAC,cAHvB,mBAGhB6C,EAHgB,KAGJ9C,EAHI,KAKvB,OAEI,qCAEI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAGA,6BAGO8C,EAAWrB,KAAK,SAAAT,GAAS,OAAO,cAAC,EAAD,CAA4BA,UAAcA,GAA1BA,Y,MCfnE+B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0c0681d3.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport propTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n        \r\n        setInputValue(event.target.value)\r\n\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategorias(c => [inputValue,...c])\r\n\r\n            setInputValue('');\r\n            \r\n        };\r\n\r\n       \r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n\r\n          <input \r\n            type = 'text'\r\n            value = {inputValue}\r\n            onChange = { handleInputChange }\r\n          />\r\n            \r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategorias: propTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default AddCategory;\r\n\r\n\r\n","export const getGifs = async (categoria) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria) }+&limit=10&api_key=QTx3IU90Qy6x06xBObO6F5wNA5dirV6w`;\r\n\r\n   const resp = await fetch( url );\r\n\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map(({id, title, images: { downsized_medium: { url } } }  ) => {\r\n\r\n    return {\r\n        id,\r\n        title,\r\n        url\r\n    }\r\n       \r\n   });\r\n\r\n   return gifs\r\n};","\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n   // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn' >\r\n            <img src = {url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\n\r\n\r\nexport const GifGrid = ( { categoria } ) => {\r\n\r\n    const {data, loading} = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n         <h3 className =\"animate__animated animate__bounce animate__faster\" >{ categoria }</h3>\r\n         {loading && <p className=\"animate__animated animate__flash\" >Loading...</p>}\r\n        {<div className = \"card-grid\" >\r\n \r\n             {\r\n\r\n              data.map( img  => <GifGridItem {...img} key= {img.id}/> ) \r\n\r\n             }\r\n\r\n         </div> \r\n         }\r\n        </>\r\n    )\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setstate({data: imgs, loading:false})\r\n                }, 3000);\r\n                });\r\n    }, [ categoria ])\r\n\r\n    return state\r\n\r\n\r\n}","import { useState } from \"react\";\r\nimport  AddCategory  from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categorias = ['One punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categorias, setCategorias] = useState(['One punch']);\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias = { setCategorias }/>\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n                {\r\n\r\n                   categorias.map( categoria =>  ( <GifGrid key = {categoria}  categoria = { categoria } /> ) )\r\n\r\n                }\r\n                \r\n            </ol>\r\n\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default GifExpertApp;","import ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}